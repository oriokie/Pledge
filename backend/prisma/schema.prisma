// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String
  role          Role          @default(USER)
  emailVerified DateTime?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  contributions Contribution[]
  groups        GroupMember[]
}

model Project {
  id          String         @id @default(cuid())
  name        String
  description String?
  status      ProjectStatus  @default(ACTIVE)
  startDate   DateTime?
  endDate     DateTime?
  budget      Float?
  progress    Int           @default(0)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  contributions Contribution[]
}

model Event {
  id          String      @id @default(cuid())
  title       String
  description String?
  startDate   DateTime
  endDate     DateTime
  location    String?
  type        EventType
  status      EventStatus @default(SCHEDULED)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Contribution {
  id        String         @id @default(cuid())
  amount    Float
  type      ContributionType
  status    ContributionStatus @default(PENDING)
  date      DateTime      @default(now())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  userId    String
  projectId String
  user      User          @relation(fields: [userId], references: [id])
  project   Project       @relation(fields: [projectId], references: [id])
}

model Group {
  id          String        @id @default(cuid())
  name        String
  description String?
  type        GroupType
  status      GroupStatus   @default(ACTIVE)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  members     GroupMember[]
}

model GroupMember {
  id        String   @id @default(cuid())
  userId    String
  groupId   String
  role      GroupRole @default(MEMBER)
  joinedAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  group     Group    @relation(fields: [groupId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum ProjectStatus {
  ACTIVE
  COMPLETED
  ON_HOLD
}

enum EventType {
  MEETING
  FUNDRAISER
  VOLUNTEER
}

enum EventStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum ContributionType {
  DONATION
  MEMBERSHIP
  SPONSORSHIP
}

enum ContributionStatus {
  PENDING
  COMPLETED
  FAILED
}

enum GroupType {
  COMMUNITY
  PROFESSIONAL
  EDUCATIONAL
}

enum GroupStatus {
  ACTIVE
  INACTIVE
}

enum GroupRole {
  MEMBER
  ADMIN
  MODERATOR
} 